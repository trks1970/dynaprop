import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java'
    id 'maven-publish'
    id "org.springframework.boot"
    id "io.spring.dependency-management"
}
dependencyManagement {
    imports {
        mavenBom(SpringBootPlugin.BOM_COORDINATES)
    }
}
dependencies {
    // Spring
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-security"


    // History
    implementation "org.springframework.data:spring-data-envers:${versions.springEnvers}"

    // see: https://stackoverflow.com/questions/53326271/spring-nullable-annotation-generates-unknown-enum-constant-warning
    implementation "com.google.code.findbugs:jsr305:${versions.jsr305}"

    // MapStruct
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"

    //Lombok
    compileOnly "org.projectlombok:lombok:${versions.lombok}"

    annotationProcessor "org.hibernate:hibernate-jpamodelgen:6.1.7.Final"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    // TEST
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    // see: https://github.com/database-rider/database-rider/issues/515
    testImplementation "com.h2database:h2:2.1.214"

    testImplementation "org.assertj:assertj-core:3.23.1"
    testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
    testImplementation "com.github.database-rider:rider-junit5:1.35.0"
    testCompileOnly "org.projectlombok:lombok:1.18.24"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.24"


}

sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/src/main/java"
        }
    }
}

compileJava {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "-Amapstruct.unmappedTargetPolicy=ERROR"
    // options.compilerArgs += ["-Xlint:unchecked"]
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}